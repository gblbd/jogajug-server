{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger-library-system",
    "description": "Swagger Api Docs For library system.",
    "contact": {
      "email": ""
    }
  },
  "schemes": ["http", "https"],
  "paths": {
    "/api/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "user registration",
        "description": "it is signup form where you will send name,email,pasword, from a form in body. API accepting form data by `req.body`. ",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "user information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "karmaker"
                },
                "email": {
                  "type": "string",
                  "example": "suvravi@diu.edu.bd"
                },
                "password": {
                  "type": "string",
                  "example": "12345678"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "user signin",
        "description": "it is signin form where you will send email,pasword, from a form in body. API accepting form data by `req.body`.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "user information for signin.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "kamol@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "12345678"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user-details/:id": {
      "get": {
        "tags": ["Auth"],
        "summary": "get details of user",
        "description": "this api wll provide details of user by send id as parameter. ",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Access Token",
            "required": true
          },
          {
            "in": "query",

            "name": "id",
            "description": "enter user id.",

            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user-public-post": {
      "post": {
        "tags": ["User Post"],
        "summary": "user post for newsfeed",
        "description": "This API accepting  data from body. so send the data from body. when you will send image or gif data that time convert the image into base64 and then send it through api.It must be anr array of string. The 'taggedUserFriend' will be also a array of id which will be string value ",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Access Token",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "api for post.",

            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "postText": {
                  "type": "string",
                  "example": "my new post for new media ap"
                },
                "activityStatus": {
                  "type": "string",
                  "example": "feeling happy"
                },
                "taggedUserFriend": {
                  "type": "array",
                  "example": [
                    "6409a085240a9a1ea73e783e",
                    "6409d154ad423af4416aaea5"
                  ]
                },
                "postLocation": {
                  "type": "string",
                  "example": "dhaka"
                },
                "shareLink": {
                  "type": "string",
                  "example": "www.klink.com"
                },
                "newsfeedStatus": {
                  "type": "string",
                  "example": "private"
                },
                "postImageList": {
                  "type": "array"
                },
                "postGifImage": {
                  "type": "array"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
